[tool.poetry]
name = "zenml"
version = "0.6.3"
packages = [
    { include = "zenml", from = "src" },
]
description = "ZenML: Write production-ready ML code."
authors = ["ZenML GmbH <info@zenml.io>"]
readme = "README.md"
homepage = "https://zenml.io"
documentation = "https://docs.zenml.io"
repository = "https://github.com/zenml-io/zenml"
license = "Apache-2.0"
keywords = [
    "machine learning", "production", "pipeline", "mlops", "devops"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Topic :: System :: Distributed Computing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
exclude = [
    "*.tests",
    "*.tests.*",
    "tests.*",
    "tests",
    "docs",
    "legacy",
    "examples"
]
include = [
    "src/zenml",
    "*.txt",
    "*.md",
    "*.sh"
]

[tool.poetry.scripts]
zenml = "zenml.cli.cli:cli"

[tool.poetry.dependencies]
python = ">=3.7.1,<3.9"
ml-pipelines-sdk = "^1.6.1"
pandas = "^1.1.5"
apache-beam = "^2.30.0"
pyyaml = "^5.4.1"
python-dateutil = "^2.8.1"
gitpython = "^3.1.18"
click = "^8.0.1"
pydantic = "^1.9.0"
analytics-python = "^1.4.0"
distro = "^1.6.0"
rich = {extras = ["jupyter"], version = "^12.0.0"}
httplib2 = "<0.20,>=0.19.1"
pyparsing = "<3,>=2.4.0"
sqlmodel = "0.0.6"
semver = "^2.13.0"


[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
mypy = "^0.931"
flake8 = "^3.9.2"
black = "^21.7b0"
interrogate = "^1.4.0"
coverage = { extras = ["toml"], version = "^5.5" }
isort = "^5.9.3"
pre-commit = "^2.14.0"
autoflake = "^1.4"
pyment = "^0.3.3"
tox = "^3.24.3"
hypothesis = "^6.23.0"
typing-extensions = ">=3.7.4"
pytest-randomly = "^3.10.1"

# mkdocs including plugins
mkdocs="^1.2.3"
mkdocs-material="^8.1.7"
mkdocs-awesome-pages-plugin="^2.6.1"
mkdocstrings="^0.17.0"
pydocstyle="^6.1.1"
mike="^1.1.2"


# mypy type stubs
types-certifi = "^2021.10.8.0"
types-croniter = "^1.0.2"
types-futures = "^3.3.1"
types-Markdown = "^3.3.6"
types-protobuf = "^3.18.0"
types-PyMySQL = "^1.0.4"
types-python-dateutil = "^2.8.2"
types-python-slugify = "^5.0.2"
types-PyYAML = "^6.0.0"
types-setuptools = "^57.4.2"
types-six = "^1.16.2"
types-termcolor = "^1.1.2"
types-psutil = "^5.8.13"
pytest-mock = "^3.6.1"
codespell = "^2.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-version-plugin]
source = "init"

[tool.tox]
name = "ZenML"
authors = ["Hamza Tahir <hamza@zenml.io>"]
legacy_tox_ini = """
[tox]
isolated_build = True
skipsdist = true
envlist = py36,py37,py38,py39

[testenv]
whitelist_externals = poetry
commands =
    poetry install -v --extras all
    poetry run pytest tests
    poetry run bash scripts/mypy.sh --install-types
"""

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
]
log_cli = true
log_cli_level = "INFO"
testpaths = "tests"
xfail_strict = true

[tool.coverage.run]
parallel = true
source = [
    "src/zenml"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    'if __name__ == "__main__":',
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
known_third_party = []
skip_glob = []
line_length = 80

[tool.mypy]
strict = true
namespace_packages = true
show_error_codes = true

# temporary fix for python 3.8 https://github.com/apache/airflow/discussions/19006
# remove once the issue is solved in airflow
exclude = "airflow/"

[[tool.mypy.overrides]]
module = "airflow.*"
follow_imports = "skip"

# end of fix

# import all tfx.proto.* files as `Any`
[[tool.mypy.overrides]]
module = "tfx.proto.*"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = [
    "tensorflow.*",
    "apache_beam.*",
    "pyarrow.*",
    "pandas.*",
    "ml_metadata.*",
    "distro.*",
    "analytics.*",
    "absl.*",
    "gcsfs.*",
    "s3fs.*",
    "adlfs.*",
    "fsspec.*",
    "torch.*",
    "pytorch_lightning.*",
    "sklearn.*",
    "numpy.*",
    "facets_overview.*",
    "IPython.core.*",
    "plotly.*",
    "graphviz.*",
    "dash.*",
    "dash_bootstrap_components.*",
    "dash_cytoscape",
    "dash.dependencies",
    "docker.*",
    "kfp.*",
    "kubernetes.*",
    "urllib3.*",
    "kfp_server_api.*",
    "sagemaker.*",
    "azureml.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 80
include = '\.pyi?$'
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 95
exclude = ["setup.py", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 1
quiet = false
whitelist-regex = []
color = true
